{"version":3,"file":"Scrollbar.stories-f99f1909.js","sources":["../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js","../../node_modules/.pnpm/clsx@2.0.0/node_modules/clsx/dist/clsx.mjs","../../core/src/hooks/useResizeObserver/useResizeObserver.ts","../../core/src/components/Scrollbar/hooks/useDragHandler.ts","../../core/src/components/Scrollbar/hooks/useScrollHandler.ts","../../core/src/components/Scrollbar/Scrollbar.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { RefObject, useEffect, useRef, useState } from \"react\";\n\nexport type UseResizeObserverParams = {\n  ref: RefObject<HTMLElement>;\n  onChange?: (rect: UseResizeObserverResult) => void;\n};\n\nexport type UseResizeObserverResult = {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n  width: number;\n  height: number;\n  x: number;\n  y: number;\n};\n\nexport const useResizeObserver = (params: UseResizeObserverParams): UseResizeObserverResult => {\n  const { ref, onChange } = params;\n\n  const [contentRect, setContentRect] = useState<UseResizeObserverResult>({\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n    x: 0,\n    y: 0,\n  });\n\n  const resizeObserverRef = useRef<ResizeObserver | null>(null);\n\n  useEffect(() => {\n    if (!ref.current) return;\n\n    if (!resizeObserverRef.current) {\n      resizeObserverRef.current = new ResizeObserver((entries) => {\n        const [entry] = entries;\n        setContentRect(entry.contentRect);\n        onChange?.(entry.contentRect);\n      });\n    }\n\n    resizeObserverRef.current.observe(ref.current);\n\n    return () => {\n      if (ref.current) {\n        resizeObserverRef.current?.unobserve(ref.current);\n      }\n    };\n  }, []);\n\n  return contentRect;\n};\n","import { RefObject, useEffect, useRef, useState } from \"react\";\n\nexport type UseDragHandlerProps = {\n  horizontalScrollbarRef: RefObject<HTMLDivElement | null>;\n  verticalScrollbarRef: RefObject<HTMLDivElement | null>;\n  contentRef: RefObject<HTMLDivElement | null>;\n};\n\nexport const useDragHandler = (props: UseDragHandlerProps) => {\n  const { horizontalScrollbarRef, verticalScrollbarRef, contentRef } = props;\n\n  const initialPositionYRef = useRef(0);\n  const initialPositionXRef = useRef(0);\n\n  const scrollTopRef = useRef(0);\n  const scrollLeftRef = useRef(0);\n\n  const [horizontalDragging, setHorizontalDragging] = useState(false);\n  const [verticalDragging, setVerticalDragging] = useState(false);\n\n  useEffect(() => {\n    const onHorizontalMouseDown = (event: MouseEvent) => {\n      setHorizontalDragging(true);\n\n      initialPositionXRef.current = event.clientX;\n      scrollLeftRef.current = contentRef.current?.scrollLeft ?? 0;\n    };\n\n    const onVerticalMouseDown = (event: MouseEvent) => {\n      setVerticalDragging(true);\n\n      initialPositionYRef.current = event.clientY;\n      scrollTopRef.current = contentRef.current?.scrollTop ?? 0;\n    };\n\n    const onMouseMove = (event: MouseEvent) => {\n      if (!contentRef.current) return;\n\n      if (horizontalScrollbarRef.current && horizontalDragging) {\n        const scrollbarThumb = horizontalScrollbarRef.current.firstChild as HTMLDivElement;\n        const contentRect = contentRef.current.getBoundingClientRect();\n        const deltaX = event.clientX - initialPositionXRef.current;\n\n        const scrollbarTrackArea =\n          horizontalScrollbarRef.current.getBoundingClientRect().width - scrollbarThumb.getBoundingClientRect().width;\n        const deltaRatio = deltaX / scrollbarTrackArea;\n\n        const movableArea = contentRef.current.scrollWidth - contentRect.width;\n\n        contentRef.current.scrollLeft = scrollLeftRef.current + movableArea * deltaRatio;\n      }\n\n      if (verticalScrollbarRef.current && verticalDragging) {\n        const scrollbarThumb = verticalScrollbarRef.current.firstChild as HTMLDivElement;\n        const contentRect = contentRef.current.getBoundingClientRect();\n\n        const deltaY = event.clientY - initialPositionYRef.current;\n\n        const scrollbarTrackArea =\n          verticalScrollbarRef.current.getBoundingClientRect().height - scrollbarThumb.getBoundingClientRect().height;\n        const deltaRatio = deltaY / scrollbarTrackArea;\n\n        const movableArea = contentRef.current.scrollHeight - contentRect.height;\n\n        contentRef.current.scrollTop = scrollTopRef.current + movableArea * deltaRatio;\n      }\n    };\n\n    const handleMouseUp = () => {\n      setHorizontalDragging(false);\n      setVerticalDragging(false);\n    };\n\n    if (horizontalScrollbarRef.current) {\n      const scrollbarThumb = horizontalScrollbarRef.current.firstChild as HTMLDivElement;\n      scrollbarThumb.addEventListener(\"mousedown\", onHorizontalMouseDown);\n    }\n\n    if (verticalScrollbarRef.current) {\n      const scrollbarThumb = verticalScrollbarRef.current.firstChild as HTMLDivElement;\n      scrollbarThumb.addEventListener(\"mousedown\", onVerticalMouseDown);\n    }\n\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      if (horizontalScrollbarRef.current) {\n        const scrollbarThumb = horizontalScrollbarRef.current.firstChild as HTMLDivElement;\n        scrollbarThumb.removeEventListener(\"mousedown\", onHorizontalMouseDown);\n      }\n\n      if (verticalScrollbarRef.current) {\n        const scrollbarThumb = verticalScrollbarRef.current.firstChild as HTMLDivElement;\n        scrollbarThumb.removeEventListener(\"mousedown\", onVerticalMouseDown);\n      }\n\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [verticalDragging, horizontalDragging]);\n\n  return {\n    horizontalDragging,\n    verticalDragging,\n  };\n};\n","import { RefObject, useEffect } from \"react\";\n\nexport type UseScrollbarHandlerProps = {\n  verticalScrollbarRef: RefObject<HTMLDivElement | null>;\n  horizontalScrollbarRef: RefObject<HTMLDivElement | null>;\n  contentRef: RefObject<HTMLDivElement>;\n  contentHeight: number;\n  contentWidth: number;\n  onScroll?: () => void;\n};\n\nexport const useScrollHandler = (props: UseScrollbarHandlerProps) => {\n  const { verticalScrollbarRef, horizontalScrollbarRef, contentHeight, contentWidth, contentRef, onScroll } = props;\n\n  useEffect(() => {\n    const handleScroll = () => {\n      onScroll?.();\n\n      if (contentRef.current && verticalScrollbarRef.current && horizontalScrollbarRef.current) {\n        // VERTICAL\n\n        const verticalThumbElement = verticalScrollbarRef.current.firstChild as HTMLDivElement;\n        const verticalScrollbarRect = verticalScrollbarRef.current.getBoundingClientRect();\n        const verticalThumbRect = verticalThumbElement.getBoundingClientRect();\n\n        const movableVerticalArea = contentRef.current.scrollHeight - contentHeight;\n        const scrollTop = contentRef.current.scrollTop;\n        const verticalScrollRatio = scrollTop / movableVerticalArea;\n\n        const verticalScrollbarSpace = verticalScrollbarRect.height - verticalThumbRect.height;\n        const verticalThumbOffset = verticalScrollbarSpace * verticalScrollRatio;\n\n        verticalThumbElement.style.transform = `translateY(${verticalThumbOffset}px)`;\n\n        // HORIZONTAL\n\n        const horizontalThumbElement = horizontalScrollbarRef.current.firstChild as HTMLDivElement;\n        const horizontalScrollbarRect = horizontalScrollbarRef.current.getBoundingClientRect();\n        const horizontalThumbRect = horizontalThumbElement.getBoundingClientRect();\n\n        const movableHorizontalArea = contentRef.current.scrollWidth - contentWidth;\n        const scrollLeft = contentRef.current.scrollLeft;\n        const horizontalScrollRatio = scrollLeft / movableHorizontalArea;\n\n        const horizontalScrollbarSpace = horizontalScrollbarRect.width - horizontalThumbRect.width;\n        const scrollbarThumbOffset = horizontalScrollbarSpace * horizontalScrollRatio;\n\n        horizontalThumbElement.style.transform = `translateX(${scrollbarThumbOffset}px)`;\n      }\n    };\n\n    contentRef.current?.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      contentRef.current?.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [contentHeight, contentWidth]);\n};\n","import React, { CSSProperties, MutableRefObject, ReactNode, useRef } from \"react\";\nimport clsx from \"clsx\";\n\nimport { useResizeObserver } from \"../../hooks\";\nimport { useDragHandler } from \"./hooks/useDragHandler\";\nimport { useScrollHandler } from \"./hooks/useScrollHandler\";\n\nimport styles from \"./Scrollbar.module.css\";\n\nexport interface ScrollbarProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  /**\n   * Fixed height of the scrollbar container\n   */\n  h?: CSSProperties[\"height\"];\n\n  /**\n   * Fixed with of the scrollbar container\n   */\n  w?: CSSProperties[\"width\"];\n\n  /**\n   * Max height of the container, if the content is less than that the scrollbar won't be used\n   */\n  mah?: CSSProperties[\"maxHeight\"];\n\n  /**\n   * The min height of the container\n   */\n  mih?: CSSProperties[\"minHeight\"];\n\n  /**\n   * Controls when the scrollbar tracks are shown.\n   * \"always\" will always show the scrollbar as long as the content is scrollable.\n   * \"hover\" will only show the tracks when hovering over the container.\n   * \"never\" will never show tracks\n   * @default \"hover\"\n   */\n  visibility?: \"always\" | \"hover\" | \"never\";\n\n  /**\n   * An optional reference to the scroll container.\n   * This is the element on which the scroll events happen.\n   */\n  viewportRef?: MutableRefObject<HTMLDivElement | null>;\n\n  /**\n   * Classnames for each part of the component\n   */\n  classNames?: {\n    root?: string;\n    viewport?: string;\n    verticalTrack?: string;\n    verticalThumb?: string;\n    horizontalTrack?: string;\n    horizontalThumb?: string;\n  };\n\n  children: ReactNode;\n}\n\nexport const Scrollbar: React.FC<ScrollbarProps> = (props) => {\n  const {\n    children,\n    classNames,\n    h: height,\n    w: width,\n    mah: maxHeight,\n    mih: minHeight,\n    viewportRef,\n    visibility = \"hover\",\n    ...divProps\n  } = props;\n\n  const contentRef = useRef<HTMLDivElement | null>(null);\n  const { width: contentWidth, height: contentHeight } = useResizeObserver({ ref: contentRef });\n\n  const handleViewportMount = (node: HTMLDivElement) => {\n    (contentRef as MutableRefObject<HTMLDivElement>).current = node;\n\n    if (viewportRef) {\n      viewportRef.current = node;\n    }\n  };\n\n  const verticalScrollbarRef = useRef<HTMLDivElement | null>(null);\n  const horizontalScrollbarRef = useRef<HTMLDivElement | null>(null);\n\n  useScrollHandler({\n    horizontalScrollbarRef,\n    verticalScrollbarRef,\n    contentRef,\n    contentHeight,\n    contentWidth,\n  });\n\n  const { horizontalDragging, verticalDragging } = useDragHandler({\n    contentRef,\n    verticalScrollbarRef,\n    horizontalScrollbarRef,\n  });\n  const isDragging = horizontalDragging || verticalDragging;\n\n  let hasHorizontalScroll = false;\n  let horizontalThumbWidth = \"0px\";\n\n  let hasVerticalScroll = false;\n  let verticalThumbHeight = \"0px\";\n\n  if (contentRef.current) {\n    // VERTICAL\n    const verticalRatio = contentHeight / contentRef.current.scrollHeight;\n    const thumbHeightPercent = Math.ceil(Math.min(verticalRatio * 100, 100));\n\n    if (thumbHeightPercent < 100) {\n      verticalThumbHeight = `${thumbHeightPercent}%`;\n      hasVerticalScroll = true;\n    } else {\n      hasVerticalScroll = false;\n    }\n\n    // HORIZONTAL\n    const horizontalRatio = contentWidth / contentRef.current.scrollWidth;\n    const thumbWidthPercent = Math.ceil(Math.min(horizontalRatio * 100, 100));\n\n    if (thumbWidthPercent < 100) {\n      horizontalThumbWidth = `${thumbWidthPercent}%`;\n      hasHorizontalScroll = true;\n    } else {\n      hasHorizontalScroll = false;\n    }\n  }\n\n  const isTrackVisible = visibility === \"always\" || isDragging;\n  const isTrackHidden = visibility === \"never\";\n\n  const containerClassNames = clsx(\n    styles.scrollContainer,\n    classNames?.root,\n    isTrackVisible && styles.visible,\n    isTrackHidden && styles.trackHidden,\n    hasHorizontalScroll && styles.hasHorizontalScroll,\n    hasVerticalScroll && styles.hasVerticalScroll,\n  );\n\n  const verticalAttributes = verticalDragging ? { [\"data-dragging\"]: true } : {};\n  const horizontalAttributes = horizontalDragging ? { [\"data-dragging\"]: true } : {};\n\n  return (\n    <div className={containerClassNames} {...divProps}>\n      <div\n        className={clsx(styles.content, classNames?.viewport)}\n        style={{ height, width, minHeight, maxHeight }}\n        data-horizontal-scroll={hasHorizontalScroll}\n        data-vertical-scroll={hasVerticalScroll}\n        ref={handleViewportMount}\n      >\n        {children}\n      </div>\n\n      <div className={clsx(styles.verticalTrack, classNames?.verticalTrack)} ref={verticalScrollbarRef}>\n        <div\n          className={clsx(styles.scrollbarThumb, classNames?.verticalThumb)}\n          style={{ height: verticalThumbHeight }}\n          {...verticalAttributes}\n        />\n      </div>\n\n      <div className={clsx(styles.horizontalTrack, classNames?.horizontalTrack)} ref={horizontalScrollbarRef}>\n        <div\n          className={clsx(styles.scrollbarThumb, classNames?.horizontalThumb)}\n          style={{ width: horizontalThumbWidth }}\n          {...horizontalAttributes}\n        />\n      </div>\n    </div>\n  );\n};\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","r","clsx","useResizeObserver","params","ref","onChange","contentRect","setContentRect","useState","resizeObserverRef","useRef","useEffect","entries","entry","_a","useDragHandler","props","horizontalScrollbarRef","verticalScrollbarRef","contentRef","initialPositionYRef","initialPositionXRef","scrollTopRef","scrollLeftRef","horizontalDragging","setHorizontalDragging","verticalDragging","setVerticalDragging","onHorizontalMouseDown","event","onVerticalMouseDown","onMouseMove","scrollbarThumb","deltaX","scrollbarTrackArea","deltaRatio","movableArea","deltaY","handleMouseUp","useScrollHandler","contentHeight","contentWidth","onScroll","handleScroll","verticalThumbElement","verticalScrollbarRect","verticalThumbRect","movableVerticalArea","verticalScrollRatio","verticalThumbOffset","horizontalThumbElement","horizontalScrollbarRect","horizontalThumbRect","movableHorizontalArea","horizontalScrollRatio","scrollbarThumbOffset","Scrollbar","children","classNames","height","width","maxHeight","minHeight","viewportRef","visibility","divProps","handleViewportMount","node","isDragging","hasHorizontalScroll","horizontalThumbWidth","hasVerticalScroll","verticalThumbHeight","verticalRatio","thumbHeightPercent","horizontalRatio","thumbWidthPercent","isTrackVisible","isTrackHidden","containerClassNames","styles","verticalAttributes","horizontalAttributes","jsxs","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2]}